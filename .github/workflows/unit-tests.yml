name: Unit Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.11', '3.12']
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt', 'setup.cfg', 'pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install package and dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        pip install pytest pytest-cov pytest-xdist pytest-mock responses
    
    - name: Run unit tests with coverage
      run: |
        # Run tests if they exist, otherwise skip
        if [ -d "tests/unit" ] && [ -n "$(find tests/unit -name 'test_*.py' -type f)" ]; then
          pytest tests/unit -v --cov=dnastack --cov-report=xml --cov-report=term-missing
        else
          echo "No unit tests found in tests/unit/ - skipping"
          echo "Unit tests will be added as part of the migration process"
        fi
    
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black isort
    
    - name: Run linting
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        flake8 dnastack tests --count --select=E9,F63,F7,F82 --show-source --statistics
        # Check code formatting with black (don't fail for now)
        black --check dnastack tests || true
        # Check import sorting (don't fail for now)
        isort --check-only dnastack tests || true